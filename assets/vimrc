filetype off
call pathogen#infect()
syntax on
filetype plugin indent on
set nocompatible
set modeline
set modelines=5
set encoding=utf-8
set relativenumber
set guioptions=
set directory^=~/.vswap
set ruler
set cursorline
set visualbell t_vb=
set incsearch
set smartcase
set smartindent
set hlsearch
set autoindent
set expandtab
set smarttab
set tabstop=4
set shiftwidth=4
set list
set listchars=tab:▸\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
set showbreak=↪
set noesckeys
set laststatus=2   " Always show the statusline
set guifont=Menlo:h10
" === functions and mappings
" change background color
function! ToggleBg()
    if &background == "light"
        set background=dark
    else
        set background=light
    endif
endfunction
" switch schemes randomly from the list
function! ToggleScheme()
    let schemes = 'hemisu shiny-ninja'
    let seconds = str2nr(strftime('%S'))
    " number needs to match the schemes count
    execute 'colorscheme '.split(schemes)[seconds%2]
    redraw
endfunction
" === custom commands
command! ToggleBg :call ToggleBg()
command! ToggleScheme :call ToggleScheme()
" === extra mappings
map <leader>x :ToggleBg<CR>
map <leader>c :ToggleScheme<CR>
map <leader>n :NERDTreeToggle<CR>
" === thanks Ian, http://statico.github.com/vim.html
map <leader>] :bnext<CR>
map <leader>[ :bprev<CR>
nmap <leader>e :e#<CR>
nmap j gj
nmap k gk
nmap <leader>h :nohlsearch<CR>
nmap <leader>s :SyntasticCheck<CR>
nmap <leader>p :CtrlPBuffer<CR>
" === config vars ===
let g:indent_guides_guide_size = 1
" === colors ===
set background=dark
call ToggleScheme()
" === terminal mode ===
if !has('gui_running')
    set listchars=tab:▸\ ,eol:¬,trail:⋅
    set background=dark
    colorscheme shiny-ninja
    if &term =~ "xterm"
        set t_Co=256
        if has("terminfo")
            let &t_Sf=nr2char(27).'[3%p1%dm'
            let &t_Sb=nr2char(27).'[4%p1%dm'
        else
            let &t_Sf=nr2char(27).'[3%dm'
            let &t_Sb=nr2char(27).'[4%dm'
        endif
    endif
endif
" === auto commands ===
au BufNewFile,BufRead *.jsm set filetype=javascript
au BufNewFile,BufRead *.less syn cluster sassCssAttributes add=@cssColors
" === syntastic
" let g:syntastic_<filetype>_checkers=['<checker-name>']
let g:syntastic_javascript_checkers=['jslint']
