---
layout: post
---

My current vim setup!
---------------------

Sunnyvale, March 20, 2013

I just tweaked my vim quite a bit. I have a 2 goals:

 + Adapt to different settings and environments.
 + Easy to toggle light/dark backgrounds and colorschemes.

I think I got it pretty close:

{% highlight vim %}
    filetype off
    call pathogen#infect()
    syntax on
    filetype plugin indent on
    set nocompatible
    set modelines=0
    set encoding=utf-8
    set relativenumber
    set guioptions=
    set directory^=~/.vswap
    set ruler
    set cursorline
    set visualbell t_vb=
    set incsearch
    set smartcase
    set smartindent
    set autoindent
    set expandtab
    set smarttab
    set tabstop=4
    set shiftwidth=4
    set list
    set listchars=tab:▸\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
    set showbreak=↪
    set noesckeys
    set laststatus=2   " Always show the statusline
    set guifont=Menlo:h10
    " === functions and mappings
    " change background color
    function! ToggleBg()
        if &background == "light"
            set background=dark
        else
            set background=light
        endif
    endfunction
    " switch schemes randomly from the list
    function! ToggleScheme()
        let schemes = 'hemisu shiny-ninja'
        let seconds = str2nr(strftime('%S'))
        " number needs to match the schemes count
        execute 'colorscheme '.split(schemes)[seconds%2]
        redraw
    endfunction
    " === custom commands
    command! ToggleBg :call ToggleBg()
    command! ToggleScheme :call ToggleScheme()
    " === extra mappings
    map <leader>x :ToggleBg<CR>
    map <leader>c :ToggleScheme<CR>
    map <leader>n :NERDTreeToggle<CR>
    map <leader>] :tabnext<CR>
    map <leader>[ :tabprevious<CR>
    " === config vars ===
    let g:indent_guides_guide_size = 1
    " === colors ===
    set background=dark
    call ToggleScheme()
    " === terminal mode ===
    if !has('gui_running')
        set listchars=tab:▸\ ,eol:¬,trail:⋅
        set background=dark
        " nocto adapts to the term env.
        colorscheme noctu
        if &term =~ "xterm"
            set t_Co=256
            if has("terminfo")
                let &t_Sf=nr2char(27).'[3%p1%dm'
                let &t_Sb=nr2char(27).'[4%p1%dm'
            else
                let &t_Sf=nr2char(27).'[3%dm'
                let &t_Sb=nr2char(27).'[4%dm'
            endif
        endif
    endif
    " === auto commands ===
    au BufNewFile,BufRead *.jsm set filetype=javascript
{% endhighlight %}

Here is a list of dependencies to reproduce this setup:
 + [vimrc](/assets/vimrc)
 + [shiny-ninja](/assets/shiny-ninja.vim)
 + [hemisu](https://github.com/noahfrederick/Hemisu)
 + [noctu](https://github.com/noahfrederick/vim-noctu)
